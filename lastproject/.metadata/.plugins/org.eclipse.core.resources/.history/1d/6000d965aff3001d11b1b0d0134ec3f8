package com.pages;

import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import com.base.TestBase;
import com.wrapper.Wrapper;

public class HomePage extends TestBase
{

Wrapper wrpobj=new Wrapper();

@FindBy(xpath ="//*[text()='Customer Login']")
WebElement pCustomerLogin1;

@FindBy(xpath = "//*[@id='userSelect']")
WebElement pCustomerNameList1;

@FindBy(xpath ="//*[@type='submit']")
WebElement pCustomerNameLogin1;
@FindBy(xpath="//*[text()='Customer Login']")
WebElement pCustomerLogin;
@FindBy(xpath="//*[@id='userSelect']")
WebElement pCustomerNameList;
@FindBy(xpath="//*[@type='submit']")
WebElement pCustomerNameLogin;

@FindBy(xpath="//*[@id=accountSelect]")
WebElement pSelectAccount;
@FindBy(xpath="//*[text()=Account Number]")
WebElement pAccountNumber;
@FindBy(xpath="//table[@class=table table-bordered table-striped]")
WebElement pTransctionTable;
@FindBy(xpath="//button[@ng-click=deposit()]")
WebElement pDeposit;
@FindBy(xpath="//button[@ng-click=withdrawl()]")
WebElement pWithdrawl;
@FindBy(xpath="//input[@ng-model=amount]")
WebElement pDepositAmount;
@FindBy(xpath="//button[@ng-click=back()]")
WebElement pBackButton;
@FindBy(xpath="//html/body/div/div/div[2]/div/div[4]/div/form/button")
WebElement pSubmitDeposit;
@FindBy(xpath="//input[@type=number]")
WebElement pWithdrawalAmount;
@FindBy(xpath="//html/body/div/div/div[2]/div/div[4]/div/form/button")
WebElement pSubmitWithdrawal;

public HomePage()
{
PageFactory.initElements(driver, this);
}


public void clickCustomer()
{
wrpobj.waitForElement(pCustomerLogin1);
pCustomerLogin1.click();
wrpobj.waitForElement(pCustomerNameList1);
wrpobj.selectByIndex(pCustomerNameList1,1);
wrpobj.waitForElement(pCustomerNameLogin1); {

}
public CustomersPage()
{
PageFactory.initElements(driver, this);
}
public void clickCustomer()
{
wrpobj.waitForElement(pCustomerLogin1);

pCustomerLogin1.click();
wrpobj.waitForElement(pCustomerNameList1);
wrpobj.selectByIndex(pCustomerNameList1,1);
wrpobj.waitForElement(pCustomerNameLogin1);
}
public void customerNameLogin()
{
wrpobj.waitForElement(pCustomerNameLogin1);
pCustomerNameLogin1.click();
wrpobj.waitForElement(pSelectAccount);
}
public void clickTransctions()
{
wrpobj.waitForElement(pTransctions);
pTransctions.click();
wrpobj.waitForElement(pTransctionTable);
wrpobj.waitForElement(pBackButton);
pBackButton.click();
wrpobj.waitForElement(pTransctions);
}
public void clickDepositTab()
{
wrpobj.waitForElement(pDeposit);
pDeposit.click();
wrpobj.waitForElement(pDepositAmount);
}
public String clickSubmitDeposit()
{

//wrpobj.waitForElement(pDepositAmount);
pDepositAmount.sendKeys(&quot;5500&quot;);
wrpobj.waitForElement(pSubmitDeposit);
pSubmitDeposit.click();
wrpobj.waitForAlert();
String pText=wrpobj.getAlertText();
wrpobj.alertAccept();
return pText;
}
public void clickWithdrawalTab()
{
wrpobj.waitForElement(pWithdrawl);
pWithdrawl.click();
wrpobj.waitForElement(pWithdrawalAmount);
}
public String clickSubmitWithdrawal()
{
//wrpobj.waitForElement(pWithdrawalAmount);
pWithdrawalAmount.sendKeys(&quot;500&quot;);
wrpobj.waitForElement(pSubmitWithdrawal);
pSubmitWithdrawal.click();
wrpobj.waitForAlert();
String pText=wrpobj.getAlertText();
wrpobj.alertAccept();
return pText;
}
}
}}